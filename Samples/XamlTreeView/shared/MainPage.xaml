<Page
    x:Class="SDKTemplate.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:tvs="using:TreeViewControl" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:SDKTemplate"
    mc:Ignorable="d">

    <Page.Resources>
        <tvs:IntegerToIndentationConverter x:Key="IntToIndConverter"/>
        <local:GlyphConverter x:Key="folderGlyphConverter" ExpandedGlyph="&#xED44;" CollapsedGlyph="&#xED42;" />
        <local:GlyphConverter x:Key="folderOutlineGlyphConverter" ExpandedGlyph="&#xED43;" CollapsedGlyph="&#xED41;" />
        <local:GlyphConverter x:Key="expandCollapseGlyphConverter" ExpandedGlyph="&#xE70D;" CollapsedGlyph="&#xE76C;"/>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"  />
        <local:BooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" IsInverse="True" />

        <DataTemplate x:Key="TreeViewItemDataTemplate">
            <UserControl
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            PointerEntered="UserControl_PointerEntered"
            PointerExited="UserControl_PointerExited">
                <!-- Note: Tag is used as easier to find inspection point for TextBox from above or below. -->
                <Grid Height="44" Margin="{Binding Depth, Converter={StaticResource IntToIndConverter}}"
                    Tag="{Binding ElementName=editorBox}"
                    Background="Transparent"
                    HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="36"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup>
                            <VisualState x:Name="HoverInlineCommandsInvisible"/>
                            <VisualState x:Name="HoverInlineCommandsVisible">
                                <VisualState.Setters>
                                    <Setter Target="starIcon.(UIElement.Visibility)" Value="Visible"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>

                    <Grid
                        Visibility="{Binding HasItems, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Margin="12,0,12,0">

                            <TextBlock
                                Text="&#xE70D;" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Center"  
                                FontSize="12"
                                FontFamily="Segoe MDL2 Assets"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Visibility="{Binding IsExpanded, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                            <TextBlock
                                Text="&#xE76C;" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Center"  
                                FontSize="12"
                                FontFamily="Segoe MDL2 Assets"
                                Style="{ThemeResource BodyTextBlockStyle}"
                                Visibility="{Binding IsExpanded, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                    </Grid>

                    <TextBox
                    Grid.Column="1"
                    x:Name="editorBox"
                    KeyDown="editorBox_KeyDown"
                    LostFocus="editorBox_LostFocus"
                    Visibility="{Binding Data.IsEditing, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Text="{Binding Data.Name, Mode=TwoWay}" 
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center"/>

                    <TextBlock
                    Grid.Column="1"
                    PointerReleased="TextBlock_PointerReleased"
                    Visibility="{Binding Data.IsEditing, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                    Text="{Binding Data.Name}" 
                    HorizontalAlignment="Left" 
                    VerticalAlignment="Center"/>

                    <FontIcon 
                    x:Name="starIcon"
                    Visibility="Collapsed"
                    Margin="0,0,12,0"
                    Grid.Column="2"
                    Glyph="&#xE00A;"/>

                    <FontIcon 
                    Visibility="{Binding Data.IsDraggedOver, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Margin="0,0,12,0"
                    Grid.Column="2"
                    Foreground="Red"
                    Glyph="&#xE00B;"/>
                </Grid>
            </UserControl>
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0" Text="This sample demonstrates how to build a TreeView layout using ListView and includes features such as Expanding/Collapsing of folders and Drag and Drop." TextWrapping="Wrap" />
        <tvs:TreeView x:Name="sampleTreeView" 
                      Grid.Row="1"
                      Background="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}" 
                      BorderBrush="{ThemeResource SystemControlForegroundBaseHighBrush}"
                      BorderThickness="2"
                      IsItemClickEnabled="True" 
                      Width="345" Height="500"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      ItemTemplate="{StaticResource TreeViewItemDataTemplate}"
                      DragItemsStarting="ListControl_DragItemsStarting"
                      Tapped="ListControl_Tapped">
            <tvs:TreeView.ItemContainerStyle>
                <Style TargetType="tvs:TreeViewItem">
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Template">
                        <!-- Reset our Control Template so we don't get a hover selection highlight -->
                        <Setter.Value>
                            <ControlTemplate>
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </tvs:TreeView.ItemContainerStyle>
            <tvs:TreeView.ItemContainerTransitions>
                <TransitionCollection>
                    <ContentThemeTransition />
                    <ReorderThemeTransition />
                    <EntranceThemeTransition IsStaggeringEnabled="False" />
                </TransitionCollection>
            </tvs:TreeView.ItemContainerTransitions>
        </tvs:TreeView>
    </Grid>
</Page>
